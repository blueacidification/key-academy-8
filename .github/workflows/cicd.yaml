name: üöÄ Bookstore CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  validate-branch:
    name: üòê Level 1 - Validate Branch Name
    runs-on: ubuntu-latest
    
    steps:
    - name: Check branch name
      run: |
        if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "‚úÖ Push to main branch - validation passed"
          exit 0
        fi
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          BRANCH_NAME="${{ github.head_ref }}"
          if [[ ! $BRANCH_NAME =~ ^deploy-.+ ]]; then
            echo "‚ùå Branch name must start with 'deploy-'"
            echo "Current branch: $BRANCH_NAME"
            echo "Example: deploy-username-fix-pipeline"
            exit 1
          fi
          echo "‚úÖ Branch name is valid: $BRANCH_NAME"
        fi
        
  security-scan:
    name: üõ°Ô∏è Level 2 - Security Scan
    runs-on: ubuntu-latest
    needs: [validate-branch]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install security tools
      run: |
        pip install bandit safety
    - name: Run Bandit security scan
      run: bandit -r bookstore/ 
    - name: Check dependencies for vulnerabilities
      run: safety check -r requirements.txt
      
  code-quality:
    name: üîç Level 3 - Code Quality Check
    runs-on: ubuntu-latest
    needs: [validate-branch]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install code quality tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Lint with flake8
      run: |
        flake8 bookstore/routes.py --count --show-source --statistics

  build-and-push:
    name: üê≥ Level 4 - Build & Push Docker Image  
    runs-on: ubuntu-latest
    needs: [code-quality, security-scan]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: blueacidification
        password: ${{ secrets.GHCR_PAT }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-${{ github.actor }}

  deploy:
    name: üöÄ Deploy application
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    - name: Deploy application
      run: |
        echo "üöÄ Deploying to customers..."
